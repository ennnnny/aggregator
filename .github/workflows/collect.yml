name: Get Subscription Weekly

on:
#  schedule:
#    - cron: '0 16 * * 6'  # 北京时间每周日凌晨执行
  workflow_dispatch: # 允许手动触发

permissions:
  contents: write

jobs:
  execute-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip3 install pyYAML requests tqdm
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Collect Subscribe
        id: collect
        run: |
          cd aggregate
          python -u subscribe/collect.py --skip

      - name: Create/Update Gist
        env:
          GH_TOKEN: ${{ secrets.PAT}}
        run: |
          cd aggregate/data
          gh gist edit ${{ secrets.GIST_ID }} --add "proxies.yaml"
          gh gist edit ${{ secrets.GIST_ID }} --add "subscribes.txt"
          gh gist edit ${{ secrets.GIST_ID }} --add "domains.txt"
          gh gist edit ${{ secrets.GIST_ID }} --add "valid-domains.txt"
          
          new_content=$(cat subscribes.txt | tr -d '\r' | tr '\n' '\\n')
          python -c "
          import requests
          import json
          headers = {'Authorization': 'token ' + '${{ secrets.PAT }}'}
          response = requests.get('https://api.github.com/gists/${{ secrets.GIST_ID2 }}', headers=headers)
          if response.status_code == 200:
            data = json.loads(response.text)
            data2 = json.loads(data['files']['Sub-Store']['content'])
            data2['subs'][2]['url'] = '$new_content'
            data['files']['Sub-Store']['content'] = json.dumps(data2)
            json_data = json.dumps(data)
            update_response = requests.patch('https://api.github.com/gists/${{ secrets.GIST_ID2 }}', headers=headers, data=json_data)
            
            if update_response.status_code != 200:
                print('Failed to update Gist')
            else:
                print('Gist updated')
          else:
            print('Failed to get Gist')
          "
          

      - name: Upload file
        run: |
          timestamp=$(date +%s)
          tar -czvf "data-${timestamp}.tar.gz" aggregate/data
          curl --location --request POST 'https://pic.paomian.party/api/upload?token=${{ secrets.TOKEN }}&tags=dingyue' --form "file=@data-${timestamp}.tar.gz"
